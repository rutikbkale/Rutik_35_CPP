// Doubly LinkedList operations.

#include<iostream.h>
#include<conio.h>

struct Node{
	int data;
	Node *next;
	Node *prev;

	Node(int data): data(data), next(NULL), prev(NULL){}
};

void displayList(Node *head){
	Node *temp = head;
	cout<<"Elements : ";
	while(temp != NULL){
		cout<<temp->data<<" ";
		temp = temp->next;
	}
	cout<<endl;
	/*Node *ptr = temp->prev;
	cout<<"Reverse Elements :";
	while(ptr != NULL){
		cout<<ptr->data<<" ";
		ptr=ptr->prev;
	}
	cout<<endl;*/
}

void displayReverseList(Node *last){
	Node *temp=last;
	cout<<"Reverse List :";
	while(temp != NULL){
		cout<<temp->data<<" ";
		temp=temp->prev;
	}
	cout<<endl;
}

int main(){
	clrscr();
	Node *head = new Node(10);
	Node *second = new Node(20);
	Node *third = new Node(30);
	Node *forth = new Node(40);
	Node *fifth = new Node(50);

	head->prev=NULL;
	head->next=second;
	second->prev=head;
	second->next=third;
	third->prev=second;
	third->next=forth;
	forth->prev=third;
	forth->next=fifth;
	fifth->prev=forth;
	fifth->next=NULL;

	displayList(head);
	displayReverseList(fifth);

	getch();
	return 0;
}